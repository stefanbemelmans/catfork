{"version":3,"sources":["Features/Header/CatForkLogo.png","Features/Header/CatForkHeader.js","Features/CatPic/CatPicComponent.js","Features/Recipes/recipeActionTypes.js","Features/Recipes/constants.js","Features/Recipes/Search/RecipeSearchBox.js","Features/Recipes/components/RecipeDetails.js","Features/Recipes/components/RecipeComponent.js","Features/Recipes/components/RecipeList.js","App.js","Features/Recipes/recipeReducers.js","middleware/logger.js","enhancers/monitorReducer.js","store.js","index.js"],"names":["module","exports","CatForkHeader","className","href","src","CatForkLogo","alt","require","config","serverCatString","CatPicComponent","useState","catPicUrl","setCatPicUrl","useEffect","console","log","getCatPic","Container","Row","Col","xs","sm","Image","onClick","a","async","Axios","response","data","mashapeHeader","recipeSearchUrlFactory","ingredientString","numOfRecipes","RecipeSearchBox","dispatch","useDispatch","searchTerms","setSearchTerms","setNumOfRecipes","id","type","placeholder","onChange","e","target","value","onFocus","title","ingredients","numberOfRecipes","cleanedIngredientString","split","map","x","trim","toString","searchString","fetch","headers","recipes","json","parsedRecipes","searchResults","GetRecipes","RecipeDetails","props","recipeDetails","method","analyzedInstructions","steps","step","i","key","number","extendedIngredientList","extendedIngredients","ing","originalString","RecipeComponent","showDetails","toggleShowDetails","setRecipeDetails","recipe","toggleRecipeDetails","Card","style","width","Img","variant","image","Body","Title","Text","usedIngredients","length","missedIngredientCount","likes","Button","RecipeDetailsSearchString","parsedRecipeDetails","fetchRecipeDetails","toggleDetails","RecipeList","results","recipeList","useSelector","state","md","App","initialState","loading","isLoaded","error","action","logger","store","next","group","info","result","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","enhancer","start","performance","now","newState","end","diff","Math","round","middlewareEnhancer","applyMiddleware","loggerMiddleware","composedEnhancers","compose","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e999162.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CatForkLogo.5d6f0df5.png\";","import React from \"react\";\r\nimport CatForkLogo from \"./CatForkLogo.png\";\r\n\r\n\r\nconst IntroText = \"This is a recipe search app based on ingredients you enter.\";\r\nconst CatApiLink = \"https://thecatapi.com\";\r\nconst SpoonacularLink = \"https://spoonacular.com/\";\r\n\r\nexport const CatForkHeader = () => {\r\n  return (\r\n    <div className=\"container-fluid text-center\">\r\n        \r\n      <h3 className=\"appIntroText\">\r\n        {IntroText} <br />\r\n        <a href={CatApiLink}>Powered by Cats </a>\r\n        And {\" \"}\r\n        <a href={SpoonacularLink}>Spoonacular </a>\r\n      </h3>\r\n      <div className=\"m-2\">\r\n        <img src={CatForkLogo} alt=\"Logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Axios from \"axios\";\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\nconst serverCatString = \"https://shielded-eyrie-66484.herokuapp.com/api/getCat\"\r\n\r\nexport const CatPicComponent = () => {\r\n  const [catPicUrl, setCatPicUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!catPicUrl) {\r\n      console.log(\"setting CatPic in UseEffect\");\r\n      getCatPic(setCatPicUrl);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container className=\"mb-1\">\r\n      <Row className=\"catPicComponent\">\r\n        <Col xs={12} sm={6} className=\"text-center\">\r\n          <Image src={catPicUrl} alt=\"logo\" className=\"m-1 catPic\" />\r\n        </Col>\r\n        <Col xs={12} sm={6} className=\"text-center\">\r\n          <button className=\"btn-class\" onClick={() => getCatPic(setCatPicUrl)}>\r\n            New Cat\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n// Pass in the setCatPicUrl Hook\r\n\r\nasync function getCatPic(setCatPicUrl) {\r\n  var response = await Axios(serverCatString)\r\n  console.log(response, \"response from serverCat\")\r\n  setCatPicUrl(response.data);\r\n}\r\n","export const FETCH_RECIPES = \"FETCH_RECIPES\";\r\nexport const SET_RECIPES = \"SET_RECIPES\";\r\nexport const SET_RECIPE_DETAILS = \"SET_RECIPE_DETAILS\";\r\nexport const RECIPE_SEARCH_ERROR = \"RECIPE_SEARCH_ERROR\";\r\nexport const SET_SEARCH_TERMS = \"SET_SEARCH_TERMS\";\r\nexport const CLEAR_SEARCH = \"CEAR_SEARCH\";  //  Clear both at once for now\r\n// TODO: separate clear function into 'CLEAR_SEARCH_TERMS' and 'CLEAR_SEARCH_RESULTS'","/* eslint-disable no-undef */\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\n// Broke the URL's into pieces to easier insert the url vars. \r\n\r\nconst getRecipeDetailsBaseUrl = \"https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/\";\r\nconst getRecipeDetailsEndUrl = \"/information?includeNutrition=false\";\r\n\r\nconst recipeSearchBaseUrl = \"https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/findByIngredients?fillIngredients=false&ingredients=\";\r\nconst recipeSearchMidUrl = \"&limitLicense=false&number=\" \r\nconst recipeSearchEndUrl = \"&ranking=1\";\r\n\r\nexport const mashapeHeader = {\"X-Mashape-Key\": \"YmReyxlVdYmshU5Dlyo9XYbBPZtep1KJPXujsnt4Hiueq8H23o\"}\r\n\r\n// process.env.MASHAPE_KEY\r\n\r\n// \"X-Mashape-Key\": \"YmReyxlVdYmshU5Dlyo9XYbBPZtep1KJPXujsnt4Hiueq8H23o\"}\r\n\r\n// process.env.MASHAPE_KEY}\r\n\r\n// \r\n\r\n// Helper functions to return the search strings\r\nexport const recipeSearchUrlFactory = (ingredientString, numOfRecipes) => recipeSearchBaseUrl + ingredientString + recipeSearchMidUrl + numOfRecipes + recipeSearchEndUrl\r\nexport const getRecipeDetailsUrlFactory = (recipeId) => getRecipeDetailsBaseUrl + recipeId + getRecipeDetailsEndUrl","/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\nimport React, { useState } from \"react\";\r\nimport * as recipeActions from \"../recipeActionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { recipeSearchUrlFactory, mashapeHeader } from \"../constants.js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const RecipeSearchBox = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchTerms, setSearchTerms] = useState(\"peppers, onions\");\r\n  const [numOfRecipes, setNumOfRecipes] = useState(10);\r\n\r\n  const GetRecipes = async (ingredients, numberOfRecipes) => {\r\n    var cleanedIngredientString = ingredients\r\n      .split(\",\")\r\n      .map(x => x.trim())\r\n      .toString();\r\n\r\n    // Setting search ingredients after cleaning\r\n    // TODO: add searchTerm validation \r\n    \r\n    dispatch({\r\n      type: recipeActions.SET_SEARCH_TERMS,\r\n      searchTerms: cleanedIngredientString\r\n    });\r\n    // Sets the flag in state that recipe fetch has started\r\n    dispatch({\r\n      type: recipeActions.FETCH_RECIPES\r\n    });\r\n\r\n    var searchString = recipeSearchUrlFactory(\r\n      cleanedIngredientString,\r\n      numberOfRecipes\r\n    );\r\n\r\n    const recipes = await fetch(searchString, {\r\n      headers: mashapeHeader\r\n    });\r\n    const parsedRecipes = await recipes.json();\r\n    // sets recipes in redux\r\n    dispatch({\r\n      type: recipeActions.SET_RECIPES,\r\n      searchResults: parsedRecipes\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12} sm={4}>\r\n          <div className=\"searchComponent m-2 p-2\">\r\n            <h3 className=\"inputLabel\">Number Of Recipes</h3>\r\n            <input\r\n              id=\"numOfRecipeInput\"\r\n              className=\"searchInput\"\r\n              type=\"number\"\r\n              placeholder=\"10\"\r\n              onChange={e => setNumOfRecipes(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col sm={4} xs={12}>\r\n          <div className=\"searchComponent m-2 p-2\">\r\n            <h3>Enter Ingredients</h3>\r\n            <h6>Separated By A Comma</h6>\r\n            <input\r\n              className=\"searchInput ingredientInput\"\r\n              type=\"text\"\r\n              value={searchTerms}\r\n              onFocus={() => setSearchTerms(\"\")}\r\n              onChange={e => setSearchTerms(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"mb-2\">\r\n          <div className=\"w-100 text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              title=\"Search\"\r\n              onClick={() => GetRecipes(searchTerms, numOfRecipes)}\r\n            >\r\n              Search!\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              title=\"Clear Results\"\r\n              // TODO: finish clear search results action\r\n              onClick={() => dispatch({type: recipeActions.CLEAR_SEARCH}) }\r\n              >Clear Results</button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nexport const RecipeDetails = props => {\r\n  //  losing the extended ingredients, getting the method\r\n  if (!props) {\r\n    return \"No Details\";\r\n  }\r\n\r\n  const recipeDetails = props.recipeDetails;\r\n  const method = recipeDetails.analyzedInstructions[0].steps.map((step, i) => {\r\n    return (\r\n      <li key={i}>\r\n        step:{step.number} {step.step}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const extendedIngredientList = recipeDetails.extendedIngredients.map(\r\n    (ing, i) => {\r\n      return <li key={i}>{ing.originalString}</li>;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"text-left m-1 p-1\">\r\n      <ul>{extendedIngredientList}</ul>\r\n      <ul>{method}</ul>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { RecipeDetails } from \"./RecipeDetails\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRecipeDetailsUrlFactory, mashapeHeader } from \"../constants\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import * as recipeActions from \"../recipeActionTypes\";\r\n\r\n// refactoring for hooks as well as general upkeep.\r\nexport const RecipeComponent = props => {\r\n  // const dispatch = useDispatch();\r\n  const [showDetails, toggleShowDetails] = useState(false);\r\n  const [recipeDetails, setRecipeDetails] = useState(null);\r\n  var recipe = props.recipe;\r\n\r\n  const toggleRecipeDetails = () => {\r\n    toggleShowDetails(!showDetails);\r\n  };\r\n\r\n  const fetchRecipeDetails = async id => {\r\n    if (!recipeDetails) {\r\n      // Get the search string from the factory\r\n      var RecipeDetailsSearchString = getRecipeDetailsUrlFactory(id);\r\n      // Get the details\r\n      var recipeDetails = await fetch(RecipeDetailsSearchString, {\r\n        headers: mashapeHeader\r\n      });\r\n      // Parse the details out of the Promise\r\n      const parsedRecipeDetails = await recipeDetails.json();\r\n      console.log(parsedRecipeDetails, \"should be object not promise\");\r\n      // setting local state\r\n      setRecipeDetails(parsedRecipeDetails);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <Card.Img variant=\"top\" src={recipe.image} />\r\n      <Card.Body>\r\n        <Card.Title>{recipe.title}</Card.Title>\r\n        <Card.Text>Used Ingredients: {recipe.usedIngredients.length}</Card.Text>\r\n        <Card.Text>\r\n          Missing Ingredients: {recipe.missedIngredientCount}\r\n        </Card.Text>\r\n        <Card.Text>Likes: {recipe.likes}</Card.Text>\r\n\r\n        {!recipeDetails ? (\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={() => fetchRecipeDetails(recipe.id)}\r\n          >\r\n            Get Recipe Details\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={() => toggleRecipeDetails()}\r\n          >\r\n           {showDetails ? \"Hide \" : \"Show \"}Recipe Details\r\n          </Button>\r\n        )}\r\n        {showDetails && recipeDetails && (\r\n          <RecipeDetails\r\n            recipeDetails={recipeDetails}\r\n            toggleDetails={toggleRecipeDetails}\r\n          />\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { RecipeComponent } from \"./RecipeComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Col from \"react-bootstrap/Col\";\r\nexport const RecipeList = () => {\r\n  let recipeList = useSelector(state => state.searchResults);\r\n  console.log(recipeList);\r\n  let results;\r\n  if (!recipeList) {\r\n    console.log(\"No recipes\");\r\n    results = <p>List Will Be here</p>;\r\n  } else {\r\n    results = recipeList.map(recipe => \r\n      <Col xs={12} sm={4} md={3} key={recipe.id} className=\"text-center mb-2\">\r\n        <RecipeComponent recipe={recipe} />\r\n      </Col>\r\n    );\r\n  }\r\n  return <div className=\"row\">{results}</div>\r\n};\r\n\r\n","/* eslint-disable no-undef */\r\nimport React from \"react\";\r\n\r\nimport { CatForkHeader } from \"./Features/Header/CatForkHeader\";\r\nimport { CatPicComponent } from \"./Features/CatPic/CatPicComponent\";\r\nimport { RecipeSearchBox } from \"./Features/Recipes/Search/RecipeSearchBox\";\r\nimport { RecipeList } from \"./Features/Recipes/components/RecipeList\";\r\n// import firebase from \"firebase\";\r\n// import firebaseConfig from \"./Features/Firebase/firebaseConfig\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\nexport const App = () => {\r\n  return (\r\n    // TODO: Cats eating salami background marquee, have the images\r\n    <div className=\"app container-fluid justify-content-center\">\r\n    \r\n      <CatForkHeader />\r\n\r\n      <CatPicComponent />\r\n\r\n      <RecipeSearchBox />\r\n      <div className=\"container-fluid\">\r\n        <RecipeList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actionType from \"./recipeActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isLoaded: false,\r\n  searchResults: [],\r\n  recipeDetails: {},\r\n  searchTerms: \"\",\r\n  error: {}\r\n};\r\n\r\nconst recipes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.FETCH_RECIPES:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n      // TODO: name change to \"SET_RECIPE_SEARCH_RESULTS\"\r\n    case actionType.SET_RECIPES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isLoaded: true,\r\n        searchResults: action.searchResults\r\n      };\r\n    case actionType.SET_SEARCH_TERMS:\r\n      return {\r\n        ...state,\r\n        searchTerms: action.searchTerms\r\n      };\r\n    case actionType.SET_RECIPE_DETAILS:\r\n      return {\r\n        ...state,\r\n        recipeDetails: action.recipeDetails\r\n      };\r\n      case actionType.CLEAR_SEARCH:\r\n        return {\r\n          state: initialState\r\n        };\r\n    case actionType.RECIPE_SEARCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recipes;\r\n","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n  }\r\n  \r\n  export default logger","const round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now()\r\n    const newState = reducer(state, action)\r\n    const end = performance.now()\r\n    const diff = round(end - start)\r\n\r\n    console.log('reducer process time:', diff)\r\n\r\n    return newState\r\n  }\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer)\r\n}\r\n\r\nexport default monitorReducerEnhancer","import recipes from \"./Features/Recipes/recipeReducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport loggerMiddleware from './middleware/logger'\r\nimport monitorReducerEnhancer from './enhancers/monitorReducer'\r\n\r\nconst middlewareEnhancer = applyMiddleware(loggerMiddleware)\r\nconst composedEnhancers = compose(\r\n  middlewareEnhancer,\r\n  monitorReducerEnhancer\r\n)\r\nconst store = createStore(recipes,undefined, composedEnhancers)\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\n// import users from \"./users\";\r\nimport store from \"./store\";\r\n\r\n// Importing the Bootstrap CSS\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,\r\n   document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}
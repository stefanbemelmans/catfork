{"version":3,"sources":["Features/Header/CatForkLogo.png","Features/Header/CatForkHeader.js","Features/CatPic/CatPicComponent.js","Features/Recipes/recipeActionTypes.js","Features/Recipes/constants.js","Features/Recipes/Search/RecipeSearchBox.js","Features/Recipes/components/RecipeDetails.js","Features/Recipes/components/RecipeComponent.js","Features/Recipes/components/RecipeList.js","App.js","Features/Recipes/recipeReducers.js","middleware/logger.js","enhancers/monitorReducer.js","store.js","index.js"],"names":["module","exports","CatForkHeader","className","href","src","CatForkLogo","alt","require","config","CatPicComponent","useState","catPicUrl","setCatPicUrl","useEffect","getCatPic","Container","Row","Col","xs","sm","Image","onClick","a","Axios","response","data","recipeDetailsProductionUrl","recipeId","RecipeSearchBox","dispatch","useDispatch","useSelector","state","numOfRecipes","searchTerms","setSearchTerms","GetRecipes","ingredients","cleanedIngredientArray","split","map","x","trim","console","log","cleanedIngredientString","toString","type","fetch","recipes","json","parsedRecipes","searchResults","id","placeholder","onChange","e","number","target","value","onFocus","style","height","RecipeDetails","props","recipeDetails","method","analyzedInstructions","steps","step","i","key","extendedIngredientList","extendedIngredients","ing","originalString","RecipeComponent","showDetails","toggleShowDetails","setRecipeDetails","recipe","toggleRecipeDetails","fetchRecipeDetails","recipeDetailUrlBuilder","freshRecipeDetails","parsedRecipeDetails","Card","width","Img","variant","image","Body","Title","title","Text","usedIngredients","length","missedIngredientCount","likes","Button","toggleDetails","RecipeList","recipeList","md","Pkey","App","initialState","loading","isLoaded","error","action","logger","store","next","group","info","result","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","enhancer","start","performance","now","newState","end","diff","Math","round","middlewareEnhancer","applyMiddleware","loggerMiddleware","composedEnhancers","compose","undefined","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,yC,2KCS9BC,EAAgB,WAC3B,OACE,yBAAKC,UAAU,+BAEb,wBAAIA,UAAU,gBARF,8DAQZ,IACc,6BACZ,uBAAGC,KATQ,yBASX,oBAFF,OAGO,IACL,uBAAGA,KAVa,4BAUhB,iBAEF,gFACA,uBAAGA,KAjBS,oDAiBZ,sBATF,MAUE,uBAAGA,KAjBM,wCAiBT,kBAEA,yBAAKD,UAAU,OACb,yBAAKE,IAAKC,IAAaC,IAAI,Y,gFCjBpBC,EAAQ,IAChBC,SAGP,IACaC,EAAkB,WAAO,IAAD,EACDC,mBAAS,IADR,mBAC5BC,EAD4B,KACjBC,EADiB,KAUnC,OAPAC,qBAAU,WACHF,GAEHG,EAAUF,MAKZ,kBAACG,EAAA,EAAD,CAAWb,UAAU,QACnB,kBAACc,EAAA,EAAD,CAAKd,UAAU,mBACb,kBAACe,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGjB,UAAU,eAC5B,kBAACkB,EAAA,EAAD,CAAOhB,IAAKO,EAAWL,IAAI,+CAA+CJ,UAAU,gBAEtF,kBAACe,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGjB,UAAU,eAC5B,4BAAQA,UAAU,YAAYmB,QAAS,kBAAMP,EAAUF,KAAvD,e,SAUKE,E,8EAAf,WAAyBF,GAAzB,eAAAU,EAAA,sEACuBC,IA7BC,8CA4BxB,OACMC,EADN,OAGEZ,EAAaY,EAASC,MAHxB,4C,sBCvCO,I,OCSQC,EAFoB,SAACC,GAAD,MAFP,wDAE4CA,GCK3DC,EAAkB,WAC7B,IAAMC,EAAWC,cADkB,GAElBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBACNvB,mBAAS,oBAHZ,mBAG5BwB,EAH4B,KAGfC,EAHe,KAK/BF,EAAe,GAIbG,EAAU,uCAAG,WAAOC,GAAP,qBAAAf,EAAA,6DACbgB,EAAyBD,EAC1BE,MAAM,KACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAEdC,QAAQC,IAAIP,EAAa,SACzBM,QAAQC,IAAIN,GACRO,EAA0BP,EAAuBQ,WAGrDjB,EAAS,CACPkB,KF5B0B,mBE6B1Bb,YAAaW,IAEfhB,EAAS,CACPkB,KFpCuB,kBEqBR,kBAmBKC,MA/BE,iEA+B0BH,GAnBjC,cAmBXI,EAnBW,iBAoBWA,EAAQC,OApBnB,QAoBXC,EApBW,OAqBfR,QAAQC,IAAIO,EAAe,qCAC3BtB,EAAS,CACPkB,KF3CmB,cE4CnBK,cAAeD,IAxBF,kDA2BfR,QAAQC,IAAI,UAAZ,MA3Be,0DAAH,sDA+BhB,OACE,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,yBAAKjB,UAAU,2BACb,wBAAIA,UAAU,cAAd,qBACA,2BACEmD,GAAG,mBACHnD,UAAU,cACV6C,KAAK,SACLO,YAAY,KACZC,SAAU,SAAAC,GAAC,OA5CEC,EA4CkBD,EAAEE,OAAOC,MA5ChB1B,EAAewB,EAA3B,IAACA,OAgDnB,kBAACxC,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,IACd,yBAAKhB,UAAU,2BACb,iDACA,oDACA,2BACEA,UAAU,8BACV6C,KAAK,OACLY,MAAOzB,EACP0B,QAAS,kBAAMzB,EAAe,KAC9BoB,SAAU,SAAAC,GAAC,OAAIrB,EAAeqB,EAAEE,OAAOC,YAI7C,kBAAC1C,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GAAIhB,UAAU,QAC5B,yBAAK2D,MAAO,CAACC,OAAO,SAAU5D,UAAU,sEACtC,yBAAKA,UAAU,uEACbmB,QAAS,kBAAMe,EAAWF,EAAaD,KADzC,WAKA,yBAAK/B,UAAU,UACbmB,QAAS,kBAAMQ,EAAS,CAAEkB,KFnFZ,kBEkFhB,sBCpFCgB,EAAgB,SAAAC,GAE3B,IAAKA,EACH,MAAO,aAGT,IAAMC,EAAgBD,EAAMC,cACtBC,EAASD,EAAcE,qBAAqB,GAAGC,MAAM5B,KAAI,SAAC6B,EAAMC,GACpE,OACE,wBAAIC,IAAKD,GAAT,QACQD,EAAKZ,OADb,IACsBY,EAAKA,SAKzBG,EAAyBP,EAAcQ,oBAAoBjC,KAC/D,SAACkC,EAAKJ,GACJ,OAAO,wBAAIC,IAAKD,GAAII,EAAIC,mBAI5B,OACE,yBAAKzE,UAAU,qBACb,4BAAKsE,GACL,4BAAKN,K,gBCdEU,EAAkB,SAAAZ,GAC7BrB,QAAQC,IAAI,oBAD0B,MAGGlC,oBAAS,GAHZ,mBAG/BmE,EAH+B,KAGlBC,EAHkB,OAIIpE,mBAAS,MAJb,mBAI/BuD,EAJ+B,KAIhBc,EAJgB,KAKlCC,EAAShB,EAAMgB,OAEbC,EAAsB,WAC1BH,GAAmBD,IAGfK,EAAkB,uCAAG,WAAM7B,GAAN,iBAAA/B,EAAA,yDACpB2C,EADoB,gCAEQjB,MAAMmC,EAAuB9B,IAFrC,cAEnB+B,EAFmB,gBAGSA,EAAmBlC,OAH5B,OAGnBmC,EAHmB,OAIvB1C,QAAQC,IAAIyC,EAAqB,gCACjCN,EAAiBM,GALM,2CAAH,sDASxB,OACY,MAAVL,EACA,kBAACM,EAAA,EAAD,CAAMzB,MAAO,CAAE0B,MAAO,SACpB,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMrF,IAAK4E,EAAOU,QACpC,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKM,MAAN,KAAaZ,EAAOa,OACpB,kBAACP,EAAA,EAAKQ,KAAN,0BAA8Bd,EAAOe,gBAAgBC,QACrD,kBAACV,EAAA,EAAKQ,KAAN,6BACwBd,EAAOiB,uBAE/B,kBAACX,EAAA,EAAKQ,KAAN,eAAmBd,EAAOkB,OAExBjC,EAQA,kBAACkC,EAAA,EAAD,CACEV,QAAQ,kBACRpE,QAAS,kBAAM4D,MAEfJ,EAAc,QAAU,QAJ1B,kBAPA,kBAACsB,EAAA,EAAD,CACEV,QAAQ,kBACRpE,QAAS,kBAAM6D,EAAmBF,EAAO3B,MAF3C,sBAcDwB,GAAeZ,GACd,kBAAC,EAAD,CACEA,cAAeA,EACfmC,cAAenB,MAKvB,uBC9DSoB,EAAa,SAACrC,GAEzB,IAAIsC,EAAatC,EAAMsC,WAQvB,OAPA3D,QAAQC,IAAI0D,EAAY,eAEdA,EAAW9D,KAAI,SAAAwC,GAAM,OAC7B,kBAAC/D,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAIoF,GAAI,EAAGC,KAAMxB,EAAO3B,GAAInD,UAAU,oBACrD,kBAAC,EAAD,CAAiB8E,OAAQA,SCsBhByB,G,YArBI,WACjB,IAAIH,EAAavE,aAAY,SAAAC,GAAK,OAAIA,EAAMoB,iBAC5C,OAEE,yBAAKlD,UAAU,8CAEb,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEEoG,GACA,yBAAKpG,UAAU,OACb,kBAAC,EAAD,CAAYoG,WAAYA,Q,gBC1B5BI,EAAe,CACnBC,SAAS,EACTC,UAAU,EACVxD,cAAe,GACfa,cAAe,GACf/B,YAAa,GACb2E,MAAO,IA0CM5D,EAvCC,WAAmC,IAAlCjB,EAAiC,uDAAzB0E,EAAcI,EAAW,uCAChD,OAAQA,EAAO/D,MACb,IPbyB,gBOcvB,OAAO,eACFf,EADL,CAEE2E,SAAS,IAGb,IPlBuB,cOmBrB,OAAO,eACF3E,EADL,CAEE2E,SAAS,EACTC,UAAU,EACVxD,cAAe0D,EAAO1D,gBAE1B,IPtB4B,mBOuB1B,OAAO,eACFpB,EADL,CAEEE,YAAa4E,EAAO5E,cAExB,IP7B8B,qBO8B5B,OAAO,eACFF,EADL,CAEEiC,cAAe6C,EAAO7C,gBAExB,IP/BsB,cOgCpB,MAAO,CACLjC,MAAO0E,GAEb,IPrC+B,sBOsC7B,OAAO,eACF1E,EADL,CAEE6E,OAAO,IAEX,QACE,OAAO7E,I,QCrCI+E,EATF,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAH,GAC5BnE,QAAQuE,MAAMJ,EAAO/D,MACrBJ,QAAQwE,KAAK,cAAeL,GAC5B,IAAIM,EAASH,EAAKH,GAGlB,OAFAnE,QAAQC,IAAI,aAAcoE,EAAMK,YAChC1E,QAAQ2E,WACDF,KCeIG,EAnBgB,SAAAC,GAAW,OAAI,SAC5CC,EACAf,EACAgB,GAaA,OAAOF,GAXkB,SAACxF,EAAO8E,GAC/B,IARUrD,EAQJkE,EAAQC,YAAYC,MACpBC,EAAWL,EAAQzF,EAAO8E,GAC1BiB,EAAMH,YAAYC,MAClBG,GAXIvE,EAWSsE,EAAMJ,EAXLM,KAAKC,MAAe,IAATzE,GAAgB,KAe/C,OAFAd,QAAQC,IAAI,wBAAyBoF,GAE9BF,IAG4BpB,EAAcgB,KCb/CS,EAAqBC,YAAgBC,GACrCC,EAAoBC,YACxBJ,EACAZ,GAGaP,EADDQ,YAAYvE,OAAQuF,EAAWF,GCC7CG,IAASC,OAAO,kBAAC,IAAD,CAAU1B,MAAOA,GAAO,kBAAC,EAAD,OACrC2B,SAASC,eAAe,W","file":"static/js/main.f385a9b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CatForkLogo.5d6f0df5.png\";","import React from \"react\";\r\nimport CatForkLogo from \"./CatForkLogo.png\";\r\n\r\nconst CatForkFb = \"https://www.facebook.com/CatFork-105145911141520\";\r\nconst CatGram =\"https://www.instagram.com/_catfork_/\";\r\nconst IntroText = \"This is a recipe search app based on ingredients you enter.\";\r\nconst CatApiLink = \"https://thecatapi.com\";\r\nconst SpoonacularLink = \"https://spoonacular.com/\";\r\n\r\nexport const CatForkHeader = () => {\r\n  return (\r\n    <div className=\"container-fluid text-center\">\r\n        \r\n      <h3 className=\"appIntroText\">\r\n        {IntroText} <br />\r\n        <a href={CatApiLink}>Powered by Cats </a>\r\n        And {\" \"}\r\n        <a href={SpoonacularLink}>Spoonacular </a>\r\n      </h3>\r\n      <h3>We're Updating so things are under construction.</h3>\r\n      <a href={CatForkFb}> Say HI On the FB </a> --\r\n      <a href={CatGram}>Or At the Gram</a>\r\n\r\n      <div className=\"m-2\">\r\n        <img src={CatForkLogo} alt=\"Logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Axios from \"axios\";\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\n// const serverCatString = \"https://shielded-eyrie-66484.herokuapp.com/api/getCat\"\r\nconst serverCatString = \"https://servercat.herokuapp.com/api/getCat\"\r\nexport const CatPicComponent = () => {\r\n  const [catPicUrl, setCatPicUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!catPicUrl) {\r\n      // console.log(\"setting CatPic in UseEffect\");\r\n      getCatPic(setCatPicUrl);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container className=\"mb-1\">\r\n      <Row className=\"catPicComponent\">\r\n        <Col xs={12} sm={6} className=\"text-center\">\r\n          <Image src={catPicUrl} alt=\"serverCat is sending a cat... wait for it...\" className=\"m-1 catPic\" />\r\n        </Col>\r\n        <Col xs={12} sm={6} className=\"text-center\">\r\n          <button className=\"btn-class\" onClick={() => getCatPic(setCatPicUrl)}>\r\n            New Cat\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n// Pass in the setCatPicUrl Hook\r\n\r\nasync function getCatPic(setCatPicUrl) {\r\n  var response = await Axios(serverCatString)\r\n  // console.log(response, \"response from serverCat\")\r\n  setCatPicUrl(response.data);\r\n}\r\n","export const FETCH_RECIPES = \"FETCH_RECIPES\";\r\nexport const SET_RECIPES = \"SET_RECIPES\";\r\nexport const SET_RECIPE_DETAILS = \"SET_RECIPE_DETAILS\";\r\nexport const RECIPE_SEARCH_ERROR = \"RECIPE_SEARCH_ERROR\";\r\nexport const SET_SEARCH_TERMS = \"SET_SEARCH_TERMS\";\r\nexport const CLEAR_SEARCH = \"CEAR_SEARCH\";  //  Clear both at once for now\r\n// TODO: separate clear function into 'CLEAR_SEARCH_TERMS' and 'CLEAR_SEARCH_RESULTS'","/* eslint-disable no-undef */\r\n\r\nconst ingredientProductionSearchUrl = \"https://servercat.herokuapp.com/api/recipeSearch/?ingredients=\";\r\n// const ingredientSearchBaseUrl = \"http://localhost:5000/api/recipeSearch/?ingredients=\"\r\n\r\nconst recipeDetailEndpoint =\"https://servercat.herokuapp.com/api/recipeDetail/?id=\";\r\n\r\nconst recipeDetailsProductionUrl = (recipeId) => recipeDetailEndpoint + recipeId;\r\n\r\nexport default recipeDetailsProductionUrl\r\n\r\n\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\nimport React, { useState } from \"react\";\r\nimport * as recipeActions from \"../recipeActionTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { recipeSearchUrlFactory } from \"../constants.js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nconst ingredientSearchUrl = \"https://servercat.herokuapp.com/api/recipeSearch/?ingredients=\";\r\n// const ingredientSearchBaseUrl = \"http://localhost:5000/api/recipeSearch/?ingredients=\"\r\n\r\nexport const RecipeSearchBox = () => {\r\n  const dispatch = useDispatch();\r\n  let recipeList = useSelector(state => state.numOfRecipes);\r\n  const [searchTerms, setSearchTerms] = useState(\"peppers, onions\");\r\n\r\n  var numOfRecipes = 10;\r\n\r\n  const setNumOfRecipes = (number) => numOfRecipes = number;\r\n\r\n  const GetRecipes = async (ingredients) => {\r\n    var cleanedIngredientArray = ingredients\r\n      .split(\",\")\r\n      .map(x => x.trim());\r\n\r\n    console.log(ingredients, \"param\");\r\n    console.log(cleanedIngredientArray);\r\n    var cleanedIngredientString = cleanedIngredientArray.toString();\r\n// When sending it to heroku I may be able to send it as an array\r\n    \r\n    dispatch({\r\n      type: recipeActions.SET_SEARCH_TERMS,\r\n      searchTerms: cleanedIngredientString\r\n    });\r\n    dispatch({\r\n      type: recipeActions.FETCH_RECIPES\r\n    });\r\n\r\n    try {\r\n      var recipes = await fetch(ingredientSearchUrl + cleanedIngredientString);\r\n      var parsedRecipes = await recipes.json();\r\n      console.log(parsedRecipes, \"recipes back from server, woohoo!\");\r\n      dispatch({\r\n        type: recipeActions.SET_RECIPES,\r\n        searchResults: parsedRecipes\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error: \", error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12} sm={4}>\r\n          <div className=\"searchComponent m-2 p-2\">\r\n            <h3 className=\"inputLabel\">Number Of Recipes</h3>\r\n            <input\r\n              id=\"numOfRecipeInput\"\r\n              className=\"searchInput\"\r\n              type=\"number\"\r\n              placeholder=\"10\"\r\n              onChange={e => setNumOfRecipes(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col sm={4} xs={12}>\r\n          <div className=\"searchComponent m-2 p-2\">\r\n            <h3>Enter Ingredients</h3>\r\n            <h6>Separated By A Comma</h6>\r\n            <input\r\n              className=\"searchInput ingredientInput\"\r\n              type=\"text\"\r\n              value={searchTerms}\r\n              onFocus={() => setSearchTerms(\"\")}\r\n              onChange={e => setSearchTerms(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col sm={4} xs={12} className=\"mb-2\">\r\n          <div style={{height:\"10rem\"}} className=\"d-flex flex-column h-100 w-100 text-center justify-content-between\">\r\n            <div className=\"bg-primary d-flex m-2 h-50 justify-content-center align-items-center\"\r\n              onClick={() => GetRecipes(searchTerms, numOfRecipes)}\r\n            >\r\n              Search!\r\n            </div>\r\n            <div className=\"bg-info\"\r\n              onClick={() => dispatch({ type: recipeActions.CLEAR_SEARCH })}\r\n            >Clear Results</div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nexport const RecipeDetails = props => {\r\n  //  losing the extended ingredients, getting the method\r\n  if (!props) {\r\n    return \"No Details\";\r\n  }\r\n\r\n  const recipeDetails = props.recipeDetails;\r\n  const method = recipeDetails.analyzedInstructions[0].steps.map((step, i) => {\r\n    return (\r\n      <li key={i}>\r\n        step:{step.number} {step.step}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const extendedIngredientList = recipeDetails.extendedIngredients.map(\r\n    (ing, i) => {\r\n      return <li key={i}>{ing.originalString}</li>;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"text-left m-1 p-1\">\r\n      <ul>{extendedIngredientList}</ul>\r\n      <ul>{method}</ul>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { RecipeDetails } from \"./RecipeDetails\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRecipeDetailsUrlFactory } from \"../constants\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import * as recipeActions from \"../recipeActionTypes\";\r\n// const recipeDetailBaseUrl = \"http://localhost:5000/api/recipeDetail/?id=\";\r\nimport recipeDetailUrlBuilder from \"../constants\"\r\n// refactoring for hooks as well as general upkeep.\r\nexport const RecipeComponent = props => {\r\n  console.log(\"Recipe Component\");\r\n  // const dispatch = useDispatch();\r\n  const [showDetails, toggleShowDetails] = useState(false);\r\n  const [recipeDetails, setRecipeDetails] = useState(null);\r\n  let recipe = props.recipe;\r\n\r\n  const toggleRecipeDetails = () => {\r\n    toggleShowDetails(!showDetails);\r\n  };\r\n\r\n  const fetchRecipeDetails = async id => {\r\n    if (!recipeDetails) {\r\n      var freshRecipeDetails = await fetch(recipeDetailUrlBuilder(id));\r\n      var parsedRecipeDetails = await freshRecipeDetails.json();\r\n      console.log(parsedRecipeDetails, \"should be object not promise\");\r\n      setRecipeDetails(parsedRecipeDetails);\r\n    }\r\n  }\r\n\r\n  return (\r\n    recipe != null ?\r\n    <Card style={{ width: \"100%\" }}>\r\n      <Card.Img variant=\"top\" src={recipe.image} />\r\n      <Card.Body>\r\n        <Card.Title>{recipe.title}</Card.Title>\r\n        <Card.Text>Used Ingredients: {recipe.usedIngredients.length}</Card.Text>\r\n        <Card.Text>\r\n          Missing Ingredients: {recipe.missedIngredientCount}\r\n        </Card.Text>\r\n        <Card.Text>Likes: {recipe.likes}</Card.Text>\r\n\r\n        {!recipeDetails ? (\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={() => fetchRecipeDetails(recipe.id)}\r\n          >\r\n            Get Recipe Details\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={() => toggleRecipeDetails()}\r\n          >\r\n           {showDetails ? \"Hide \" : \"Show \"}Recipe Details\r\n          </Button>\r\n        )}\r\n        {showDetails && recipeDetails && (\r\n          <RecipeDetails\r\n            recipeDetails={recipeDetails}\r\n            toggleDetails={toggleRecipeDetails}\r\n          />\r\n        )}\r\n      </Card.Body>\r\n    </Card> :\r\n    \"nothing to see here\"\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RecipeComponent } from \"./RecipeComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nexport const RecipeList = (props) => {\r\n  // let recipeList = useSelector(state => state.searchResults);\r\n  var recipeList = props.recipeList;\r\n  console.log(recipeList, \"recipe list\");\r\n  var results;\r\n  results = recipeList.map(recipe =>\r\n    <Col xs={12} sm={4}  md={3} Pkey={recipe.id} className=\"text-center mb-2\">\r\n      <RecipeComponent recipe={recipe} />\r\n    </Col>\r\n  );\r\n  return results;\r\n}\r\n// };\r\n\r\n","/* eslint-disable no-undef */\r\nimport React from \"react\";\r\n\r\nimport { CatForkHeader } from \"./Features/Header/CatForkHeader\";\r\nimport { CatPicComponent } from \"./Features/CatPic/CatPicComponent\";\r\nimport { RecipeSearchBox } from \"./Features/Recipes/Search/RecipeSearchBox\";\r\nimport { RecipeList } from \"./Features/Recipes/components/RecipeList\";\r\n// import firebase from \"firebase\";\r\n// import firebaseConfig from \"./Features/Firebase/firebaseConfig\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\nexport const App = () => {\r\n  let recipeList = useSelector(state => state.searchResults);\r\n  return (\r\n    // TODO: Cats eating salami background marquee, have the images\r\n    <div className=\"app container-fluid justify-content-center\">\r\n\r\n      <CatForkHeader />\r\n\r\n      <CatPicComponent />\r\n\r\n      <RecipeSearchBox />\r\n      {\r\n        recipeList &&\r\n        <div className=\"row\">\r\n          <RecipeList recipeList={recipeList} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actionType from \"./recipeActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isLoaded: false,\r\n  searchResults: [],\r\n  recipeDetails: {},\r\n  searchTerms: \"\",\r\n  error: {}\r\n};\r\n\r\nconst recipes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.FETCH_RECIPES:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n      // TODO: name change to \"SET_RECIPE_SEARCH_RESULTS\"\r\n    case actionType.SET_RECIPES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isLoaded: true,\r\n        searchResults: action.searchResults\r\n      };\r\n    case actionType.SET_SEARCH_TERMS:\r\n      return {\r\n        ...state,\r\n        searchTerms: action.searchTerms\r\n      };\r\n    case actionType.SET_RECIPE_DETAILS:\r\n      return {\r\n        ...state,\r\n        recipeDetails: action.recipeDetails\r\n      };\r\n      case actionType.CLEAR_SEARCH:\r\n        return {\r\n          state: initialState\r\n        };\r\n    case actionType.RECIPE_SEARCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recipes;\r\n","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n  }\r\n  \r\n  export default logger","const round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now()\r\n    const newState = reducer(state, action)\r\n    const end = performance.now()\r\n    const diff = round(end - start)\r\n\r\n    console.log('reducer process time:', diff)\r\n\r\n    return newState\r\n  }\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer)\r\n}\r\n\r\nexport default monitorReducerEnhancer","import recipes from \"./Features/Recipes/recipeReducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport loggerMiddleware from './middleware/logger'\r\nimport monitorReducerEnhancer from './enhancers/monitorReducer'\r\n\r\nconst middlewareEnhancer = applyMiddleware(loggerMiddleware)\r\nconst composedEnhancers = compose(\r\n  middlewareEnhancer,\r\n  monitorReducerEnhancer\r\n)\r\nconst store = createStore(recipes,undefined, composedEnhancers)\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\n// import users from \"./users\";\r\nimport store from \"./store\";\r\n\r\n// Importing the Bootstrap CSS\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,\r\n   document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}